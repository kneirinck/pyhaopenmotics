---
name: Linting

# yamllint disable-line rule:truthy
on:
    push:
    pull_request:
    workflow_dispatch:

jobs:
    precommit:
        name: ${{ matrix.name }}
        runs-on: ubuntu-latest
        steps:
            - name: ⤵️ Check out code from GitHub
              uses: actions/checkout@v3
            - name: 🏗 Set up Python 3.10
              id: python
              uses: actions/setup-python@v3
              with:
                  python-version: "3.10"
            - name: 🏗 Read .nvmrc
              if: ${{ matrix.id == 'prettier' }}
              id: nvm
              run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT
            - name: 🏗 Set up Node.js ${{ steps.nvm.outputs.NVMRC }}
              if: ${{ matrix.id == 'prettier' }}
              uses: actions/setup-node@v3.6.0
              with:
                  node-version: "${{ steps.nvm.outputs.NVMRC }}"
            - name: 🏗 Get pip cache dir
              id: pip-cache
              run: |
                  echo "DIR=$(pip cache dir)" >> $GITHUB_OUTPUT
            - name: ⤵️ Restore cached Python PIP packages
              uses: actions/cache@v3
              with:
                  path: ${{ steps.pip-cache.outputs.DIR }}
                  key: pip-${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{ hashFiles('.github/workflows/requirements.txt') }}
                  restore-keys: |
                      pip-${{ runner.os }}-${{ steps.python.outputs.python-version }}-
            - name: 🏗 Install workflow dependencies
              run: |
                  pip install -r .github/workflows/requirements.txt
                  poetry config virtualenvs.create true
                  poetry config virtualenvs.in-project true
            - name: ⤵️ Restore cached Python virtual environment
              id: cached-poetry-dependencies
              uses: actions/cache@v3
              with:
                  path: .venv
                  key: >-
                      venv-${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{ hashFiles('poetry.lock') }}
                      venv-${{ runner.os }}-${{ steps.python.outputs.python-version }}-
            - name: 🏗 Install Python dependencies
              run: poetry install --no-interaction
            - name: 🏗  Get npm cache directory
              if: ${{ matrix.id == 'prettier' }}
              id: npm-cache
              run: |
                  echo "DIR=$(npm config get cache)" >> $GITHUB_OUTPUT
            - name: ⤵️ Restore cached node modules
              if: ${{ matrix.id == 'prettier' }}
              uses: actions/cache@v3
              with:
                  path: ${{ steps.npm-cache.outputs.DIR }}
                  key: node-${{ runner.os }}-${{ steps.nvm.outputs.NVMRC }}-${{ hashFiles('.github/workflows/requirements.txt') }}
                  restore-keys: |
                      node-${{ runner.os }}-${{ steps.nvm.outputs.NVMRC }}-
            - name: 🏗 Install NPM dependencies
              if: ${{ matrix.id == 'prettier' }}
              run: npm install
            - name: 🚀 Run pre-commit for all files
              run: poetry run pre-commit run  --all-files
